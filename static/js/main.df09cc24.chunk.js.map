{"version":3,"sources":["components/Header.js","components/RequestOptions.js","components/InputRequest.js","components/ButtonStart.js","components/InputResponse.js","components/Loader.js","components/Error.js","components/InitMessage.js","App.js","index.js"],"names":["Header","className","href","RequestOptions","https","setHttps","type","value","checked","onChange","target","InputRequest","setRequest","request","requestTextarea","React","useRef","useEffect","url","replace","ref","onBlur","event","body","headers","rawRequest","current","slicedRequest","split","method","endpoint","map","rawHeader","spellCheck","placeholder","ButtonStart","setError","setResponse","setLoading","a","fetch","mode","catch","err","message","response","onClick","xmlns","width","height","fill","viewBox","d","InputResponse","useState","responseString","setResponseString","newResponseString","concat","status","statusText","entries","header","charAt","toUpperCase","slice","text","then","readOnly","Loader","Error","error","InitMessage","App","loading","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df09cc24.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <nav className=\"header\">\r\n            <a href=\"/\"><h2>CORS-Secure</h2></a>\r\n            <ul className=\"menu\">\r\n                <li><a href=\"/\">OWASP</a></li>\r\n                <li><a href=\"/\">PortSwigger</a></li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst RequestOptions = ({ https, setHttps }) => {\r\n\r\n    function handleHttps({ target }) {\r\n        setHttps(target.checked);\r\n    }\r\n\r\n    return (\r\n        <div className=\"request-options\">\r\n            <h3>Options</h3>\r\n            <input type=\"checkbox\" value=\"https\" checked={https} onChange={handleHttps} />\r\n            <label>HTTPS</label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestOptions\r\n","import React from 'react'\r\n\r\nconst InputRequest = ({ https, setRequest, request }) => {\r\n    const requestTextarea = React.useRef();\r\n\r\n    React.useEffect(() => {\r\n      if (https && request !== null) {\r\n        setRequest({\r\n          ...request,\r\n          url: request.url.replace('http','https')\r\n      })\r\n      } else if (!https && request !== null) {\r\n        setRequest({\r\n          ...request,\r\n          url: request.url.replace('https','http')\r\n      })\r\n      }\r\n    }, [https])\r\n\r\n    function handleBlur(event) {\r\n        let url;\r\n        let body;\r\n        let headers = {};\r\n        let rawRequest = requestTextarea.current.value;\r\n        let slicedRequest = rawRequest.split('\\n');\r\n        let method = slicedRequest[0].split(' /')[0];\r\n        let endpoint = slicedRequest[0].split(' ')[1];\r\n    \r\n        delete slicedRequest[0];\r\n        slicedRequest.map((rawHeader) => (\r\n          headers[rawHeader.split(': ')[0]] = rawHeader.split(': ')[1]\r\n        ));\r\n        \r\n        if (https) {\r\n          url = 'https://'+headers['Host']+endpoint;\r\n        } else {\r\n          url = 'http://'+headers['Host']+endpoint;\r\n        }\r\n    \r\n        if (method === 'POST' || method === 'PUT') {\r\n          body = rawRequest.split('\\n\\n')[1];\r\n        } else {\r\n          body = null;\r\n        }\r\n\r\n        setRequest({\r\n            url: url,\r\n            method: method,\r\n            headers: headers,\r\n            body: body\r\n        })\r\n    }\r\n    return (\r\n        <div className='request-input'>\r\n          <h2>Request</h2>\r\n            <textarea ref={requestTextarea} onBlur={handleBlur} spellCheck=\"false\" placeholder=\"Paste the request here...\"></textarea>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputRequest","import React from 'react'\r\n\r\nconst ButtonStart = ({ request, setError, setResponse, setLoading }) => {\r\n\r\n    async function handleClick(event) {\r\n        if (request) {\r\n        setLoading(true);\r\n        setError(null);\r\n        const response = \r\n            await fetch(\r\n                request.url, {\r\n                method: request.method,\r\n                headers: request.headers,\r\n                body: request.body,\r\n                mode: 'cors'\r\n            })\r\n            .catch(err => {\r\n                setError(err.message)\r\n            });\r\n        setResponse(response);\r\n        setLoading(false);\r\n        } else {\r\n            setError('Please fill the request input correctly.')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"button-start\">\r\n            <button onClick={handleClick}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" fill=\"#252422\" viewBox=\"0 0 16 16\">\r\n                    <path d=\"m11.596 8.697-6.363 3.692c-.54.313-1.233-.066-1.233-.697V4.308c0-.63.692-1.01 1.233-.696l6.363 3.692a.802.802 0 0 1 0 1.393z\"/>\r\n                </svg>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ButtonStart\r\n","import React from 'react'\r\n\r\nconst InputResponse = ({ response }) => {\r\n    const [ responseString, setResponseString ] = React.useState('');\r\n\r\n    React.useEffect(() => {\r\n        if (response) {\r\n            let newResponseString = '';\r\n            newResponseString = newResponseString.concat(`HTTP/1.1 ${response.status} ${response.statusText}\\n`);\r\n            for (let header of response.headers.entries()) {\r\n                newResponseString = newResponseString.concat(`${header[0].charAt(0).toUpperCase() + header[0].slice(1)}: ${header[1]}\\n`);\r\n            }\r\n            \r\n            response.text().then(async function (text) {\r\n                newResponseString = newResponseString.concat(`\\n\\n${text}`);\r\n                setResponseString(newResponseString);\r\n            });\r\n        }\r\n    }, [response])\r\n    return (\r\n        <div className='response-input'>\r\n            <h2>Response - Exploitable</h2>\r\n            <textarea readOnly value={responseString}></textarea>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputResponse\r\n","import React from 'react'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"loader-wrapper\">\r\n            <div className=\"loader\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\n\r\nconst Error = ({ error }) => {\r\n    return (\r\n        <div className=\"error-panel\">\r\n            <h2>Not exploitable</h2>\r\n            <p>An error occurred while fetching the CORS request, verify the browser console to check for any CORS related errors.</p>\r\n            <p>The following error occured:</p>\r\n            <div className=\"error-wrapper\">\r\n                <div className=\"error\">{error}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import React from 'react'\r\n\r\nconst InitMessage = () => {\r\n    return (\r\n        <div className='message-panel'>\r\n            <h2>CORS Test</h2>\r\n            <div className='message'>\r\n                <p>Paste a request and hit the start button to test if the API has a overly permissive CORS policy.</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InitMessage\r\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport RequestOptions from './components/RequestOptions';\nimport InputRequest from './components/InputRequest';\nimport ButtonStart from './components/ButtonStart';\nimport InputResponse from './components/InputResponse';\nimport Loader from './components/Loader';\nimport  Error from './components/Error';\nimport InitMessage from './components/InitMessage';\n\nfunction App() {\n  const [ request, setRequest ] = React.useState(null);\n  const [ https, setHttps ] = React.useState(false);    \n  const [ error, setError ] = React.useState(null);\n  const [ response, setResponse ] = React.useState(null);\n  const [ loading, setLoading ] = React.useState(false);;\n\n  \n  return (\n    <div>\n      <Header />\n      <div className=\"content\">\n        <RequestOptions https={https} setHttps={setHttps} />\n        <InputRequest https={https} setRequest={setRequest} request={request} />\n        <ButtonStart request={request} setError={setError} setResponse={setResponse} setLoading={setLoading} />\n        {loading ? <Loader /> : error ? <Error error={error} /> : response ? <InputResponse response={response} /> : <InitMessage/>}\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n//import 'bootstrap/dist/js/bootstrap.bundle.min.js';\n//import 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}